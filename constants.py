MASKS = [
    lambda i,j : (i+j)%2 == 0,
    lambda i,j : i%2 == 0,
    lambda i,j : j%3 == 0,
    lambda i,j : (i+j)%3 == 0,
    lambda i,j : (i/2 + j/3)%2 == 0,
    lambda i,j : (i*j)%2 + (i*j)%3 == 0,
    lambda i,j : ((i*j)%3 + i*j)%2 == 0,
    lambda i,j : ((i*j)%3 + i + j)%2 == 0
]

"""
    Pre-calculated look up tables for a^n to decimal conversion
"""
EXP_TABLE = list(range(256))    # GF(2^8)
LOG_TABLE = list(range(256))

for i in range(8):
    EXP_TABLE[i] = 1 << i

for i in range(8, 256):
    temp = EXP_TABLE[i-1]*2
    EXP_TABLE[i] = temp if temp < 256 else temp^285 # Modulo 100011101

for i in range(256):
    LOG_TABLE[EXP_TABLE[i]] = i

# https://en.wikipedia.org/wiki/QR_code
DATA_TYPE = {
    0b0001 : "Numberic",
    0b0010 : "Alphanumeric",
    0b0100 : "Byte",
    0b1000 : "Kanji",
    0b0111 : "ECI"
}
DATA_TYPE_INDICATOR = {
    "Numberic"      : 0b0001,
    "Alphanumeric"  : 0b0010,
    "Byte"          : 0b0100,
    "Kanji"         : 0b1000,
    "ECI"           : 0b0111
}

LEVEL = {
    0b01 : "L",
    0b00 : "M",
    0b11 : "Q",
    0b10 : "H"
}
LEVEL_INDICATOR = {
    "L" : 0b01,
    "M" : 0b00,
    "Q" : 0b11,
    "H" : 0b10
}

LEVEL_SAFTY_RANK = {
    "L" : 0,    0b01 : 0,
    "M" : 1,    0b00 : 1,
    "Q" : 2,    0b11 : 2,
    "H" : 3,    0b10 : 3
}

# https://en.wikipedia.org/wiki/Extended_Channel_Interpretation
ECI_codes = {
    3: "latin-1",          # ISO/IEC 8859-1
    4: "iso8859-2",        # ISO/IEC 8859-2 (Central European)
    5: "iso8859-3",        # ISO/IEC 8859-3 (South European)
    6: "iso8859-4",        # ISO/IEC 8859-4 (Baltic)
    7: "iso8859-5",        # ISO/IEC 8859-5 (Cyrillic)
    8: "iso8859-6",        # ISO/IEC 8859-6 (Arabic)
    9: "iso8859-7",        # ISO/IEC 8859-7 (Greek)
    10: "iso8859-8",       # ISO/IEC 8859-8 (Hebrew)
    11: "iso8859-9",       # ISO/IEC 8859-9 (Turkish)
    12: "iso8859-10",      # ISO/IEC 8859-10 (Nordic)
    13: "iso8859-11",      # ISO/IEC 8859-11 (Thai)
    15: "iso8859-13",      # ISO/IEC 8859-13 (Baltic Rim)
    16: "iso8859-14",      # ISO/IEC 8859-14 (Celtic)
    17: "iso8859-15",      # ISO/IEC 8859-15 (Western European with â‚¬ symbol)
    18: "iso8859-16",      # ISO/IEC 8859-16 (South-Eastern European)
    20: "shift_jis",       # Shift JIS (Japanese)
    21: "windows-1250",    # Windows-1250 (Central European)
    22: "windows-1251",    # Windows-1251 (Cyrillic)
    23: "windows-1252",    # Windows-1252 (Western European, with extra printable chars)
    24: "windows-1256",    # Windows-1256 (Arabic)
    25: "utf-16be",        # UTF-16 Big Endian
    26: "utf-8",           # UTF-8
    27: "ascii",           # US-ASCII
    28: "big5",            # Big5 (Traditional Chinese)
    29: "gb18030",         # GB18030 (Simplified Chinese)
    30: "euc-kr"           # EUC-KR (Korean)
}


PADDING_BYTES = ["11101100", "00010001"] # Alternates untill sufficient length of data

ALPHANUMERIC_TABLE = list("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:")

CHARACTER_COUNT_LENGTH = {
    # ENCODING_MODE : [VERSION] CHARCTER COUNT INDICATOR LENGTH
    0b0001 : [10 for _ in range(1,10)] + [12 for _ in range(10,27)] + [14 for _ in range(27, 41)],
    0b0010 : [9 for _ in range(1,10)] + [11 for _ in range(10,27)] + [13 for _ in range(27, 41)],
    0b0100 : [8 for _ in range(1,10)] + [16 for _ in range(10,27)] + [16 for _ in range(27, 41)],
    0b1000 : [8 for _ in range(1,10)] + [10 for _ in range(10,27)] + [12 for _ in range(27, 41)],
    0b0111 : [8 for _ in range(1,10)] + [16 for _ in range(10,27)] + [16 for _ in range(27, 41)],  # TODO version 27+ might be wrong
}

RS_BLOCK_TABLE = (
    # g1 = group 1,
    # g2 = group 2
    # (blocks g1, total bytes g1, data bytes g1, blocks g2, total bytes g2, data bytes g2)

    (1, 26, 19), # L # 1
    (1, 26, 16), # M
    (1, 26, 13), # Q
    (1, 26, 9),  # H
    
    (1, 44, 34), # 2
    (1, 44, 28),
    (1, 44, 22),
    (1, 44, 16),
    
    (1, 70, 55), # 3
    (1, 70, 44),
    (2, 35, 17),
    (2, 35, 13),
    
    (1, 100, 80), # 4
    (2, 50, 32),
    (2, 50, 24),
    (4, 25, 9),
    
    (1, 134, 108), # 5
    (2, 67, 43),
    (2, 33, 15, 2, 34, 16),
    (2, 33, 11, 2, 34, 12),
    
    (2, 86, 68), # 6
    (4, 43, 27),
    (4, 43, 19),
    (4, 43, 15),
    
    (2, 98, 78), # 7
    (4, 49, 31),
    (2, 32, 14, 4, 33, 15),
    (4, 39, 13, 1, 40, 14),
    
    (2, 121, 97), # 8
    (2, 60, 38, 2, 61, 39),
    (4, 40, 18, 2, 41, 19),
    (4, 40, 14, 2, 41, 15),
    
    (2, 146, 116), # 9
    (3, 58, 36, 2, 59, 37),
    (4, 36, 16, 4, 37, 17),
    (4, 36, 12, 4, 37, 13),
    
    (2, 86, 68, 2, 87, 69), # 10
    (4, 69, 43, 1, 70, 44),
    (6, 43, 19, 2, 44, 20),
    (6, 43, 15, 2, 44, 16),
    
    (4, 101, 81), # 11
    (1, 80, 50, 4, 81, 51),
    (4, 50, 22, 4, 51, 23),
    (3, 36, 12, 8, 37, 13),
    
    (2, 116, 92, 2, 117, 93), # 12
    (6, 58, 36, 2, 59, 37),
    (4, 46, 20, 6, 47, 21),
    (7, 42, 14, 4, 43, 15),
    
    (4, 133, 107), # 13
    (8, 59, 37, 1, 60, 38),
    (8, 44, 20, 4, 45, 21),
    (12, 33, 11, 4, 34, 12),
    
    (3, 145, 115, 1, 146, 116), # 14
    (4, 64, 40, 5, 65, 41),
    (11, 36, 16, 5, 37, 17),
    (11, 36, 12, 5, 37, 13),
    
    (5, 109, 87, 1, 110, 88), # 15
    (5, 65, 41, 5, 66, 42),
    (5, 54, 24, 7, 55, 25),
    (11, 36, 12, 7, 37, 13),
    
    (5, 122, 98, 1, 123, 99), # 16
    (7, 73, 45, 3, 74, 46),
    (15, 43, 19, 2, 44, 20),
    (3, 45, 15, 13, 46, 16),
    
    (1, 135, 107, 5, 136, 108), # 17
    (10, 74, 46, 1, 75, 47),
    (1, 50, 22, 15, 51, 23),
    (2, 42, 14, 17, 43, 15),
    
    (5, 150, 120, 1, 151, 121), # 18
    (9, 69, 43, 4, 70, 44),
    (17, 50, 22, 1, 51, 23),
    (2, 42, 14, 19, 43, 15),
    
    (3, 141, 113, 4, 142, 114), # 19
    (3, 70, 44, 11, 71, 45),
    (17, 47, 21, 4, 48, 22),
    (9, 39, 13, 16, 40, 14),
    
    (3, 135, 107, 5, 136, 108), # 20
    (3, 67, 41, 13, 68, 42),
    (15, 54, 24, 5, 55, 25),
    (15, 43, 15, 10, 44, 16),
    
    (4, 144, 116, 4, 145, 117), # 21
    (17, 68, 42),
    (17, 50, 22, 6, 51, 23),
    (19, 46, 16, 6, 47, 17),
    
    (2, 139, 111, 7, 140, 112), # 22
    (17, 74, 46),
    (7, 54, 24, 16, 55, 25),
    (34, 37, 13),
    
    (4, 151, 121, 5, 152, 122), # 23
    (4, 75, 47, 14, 76, 48),
    (11, 54, 24, 14, 55, 25),
    (16, 45, 15, 14, 46, 16),
    
    (6, 147, 117, 4, 148, 118), # 24
    (6, 73, 45, 14, 74, 46),
    (11, 54, 24, 16, 55, 25),
    (30, 46, 16, 2, 47, 17),
    
    (8, 132, 106, 4, 133, 107), # 25
    (8, 75, 47, 13, 76, 48),
    (7, 54, 24, 22, 55, 25),
    (22, 45, 15, 13, 46, 16),
    
    (10, 142, 114, 2, 143, 115), # 26
    (19, 74, 46, 4, 75, 47),
    (28, 50, 22, 6, 51, 23),
    (33, 46, 16, 4, 47, 17),
    
    (8, 152, 122, 4, 153, 123), # 27
    (22, 73, 45, 3, 74, 46),
    (8, 53, 23, 26, 54, 24),
    (12, 45, 15, 28, 46, 16),
    
    (3, 147, 117, 10, 148, 118), # 28
    (3, 73, 45, 23, 74, 46),
    (4, 54, 24, 31, 55, 25),
    (11, 45, 15, 31, 46, 16),
    
    (7, 146, 116, 7, 147, 117), # 29
    (21, 73, 45, 7, 74, 46),
    (1, 53, 23, 37, 54, 24),
    (19, 45, 15, 26, 46, 16),
    
    (5, 145, 115, 10, 146, 116), # 30
    (19, 75, 47, 10, 76, 48),
    (15, 54, 24, 25, 55, 25),
    (23, 45, 15, 25, 46, 16),
    
    (13, 145, 115, 3, 146, 116), # 31
    (2, 74, 46, 29, 75, 47),
    (42, 54, 24, 1, 55, 25),
    (23, 45, 15, 28, 46, 16),
    
    (17, 145, 115), # 32
    (10, 74, 46, 23, 75, 47),
    (10, 54, 24, 35, 55, 25),
    (19, 45, 15, 35, 46, 16),
    
    (17, 145, 115, 1, 146, 116), # 33
    (14, 74, 46, 21, 75, 47),
    (29, 54, 24, 19, 55, 25),
    (11, 45, 15, 46, 46, 16),
    
    (13, 145, 115, 6, 146, 116), # 34
    (14, 74, 46, 23, 75, 47),
    (44, 54, 24, 7, 55, 25),
    (59, 46, 16, 1, 47, 17),
    
    (12, 151, 121, 7, 152, 122), # 35
    (12, 75, 47, 26, 76, 48),
    (39, 54, 24, 14, 55, 25),
    (22, 45, 15, 41, 46, 16),
    
    (6, 151, 121, 14, 152, 122), # 36
    (6, 75, 47, 34, 76, 48),
    (46, 54, 24, 10, 55, 25),
    (2, 45, 15, 64, 46, 16),
    
    (17, 152, 122, 4, 153, 123), # 37
    (29, 74, 46, 14, 75, 47),
    (49, 54, 24, 10, 55, 25),
    (24, 45, 15, 46, 46, 16),
    
    (4, 152, 122, 18, 153, 123), # 38
    (13, 74, 46, 32, 75, 47),
    (48, 54, 24, 14, 55, 25),
    (42, 45, 15, 32, 46, 16),
    
    (20, 147, 117, 4, 148, 118), # 39
    (40, 75, 47, 7, 76, 48),
    (43, 54, 24, 22, 55, 25),
    (10, 45, 15, 67, 46, 16),
    
    (19, 148, 118, 6, 149, 119), # 40
    (18, 75, 47, 31, 76, 48),
    (34, 54, 24, 34, 55, 25),
    (20, 45, 15, 61, 46, 16),
)

# alignment pattern positions in grid based on version
ALIGNMENT_PATTERN_TABLE = [
    [],         # ver 1
    [6, 18],    # ver 2
    [6, 22],
    [6, 26],
    [6, 30],
    [6, 34],
    [6, 22, 38],
    [6, 24, 42],
    [6, 26, 46],
    [6, 28, 50],
    [6, 30, 54],
    [6, 32, 58],
    [6, 34, 62],
    [6, 26, 46, 66],
    [6, 26, 48, 70],
    [6, 26, 50, 74],
    [6, 30, 54, 78],
    [6, 30, 56, 82],
    [6, 30, 58, 86],
    [6, 34, 62, 90],
    [6, 28, 50, 72, 94],
    [6, 26, 50, 74, 98],
    [6, 30, 54, 78, 102],
    [6, 28, 54, 80, 106],
    [6, 32, 58, 84, 110],
    [6, 30, 58, 86, 114],
    [6, 34, 62, 90, 118],
    [6, 26, 50, 74, 98, 122],
    [6, 30, 54, 78, 102, 126],
    [6, 26, 52, 78, 104, 130],
    [6, 30, 56, 82, 108, 134],
    [6, 34, 60, 86, 112, 138],
    [6, 30, 58, 86, 114, 142],
    [6, 34, 62, 90, 118, 146],
    [6, 30, 54, 78, 102, 126, 150],
    [6, 24, 50, 76, 102, 128, 154],
    [6, 28, 54, 80, 106, 132, 158],
    [6, 32, 58, 84, 110, 136, 162],
    [6, 26, 54, 82, 110, 138, 166],
    [6, 30, 58, 86, 114, 142, 170],
]